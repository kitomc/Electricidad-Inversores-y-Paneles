<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAB4UExURf///wEAAgAAAPX19aOjo3R0dA8PEOzs7LS0tM3NzUtLSyoqKi0tLfv7+/Pz8/j4+MTE
        xOTk5NLS0tnZ2R0dHTw8Pejo6H9/f7u7u2xsbDMzNCQkJIuLjJ6enkJCQzg4OHt7e6ysrJaVllxcXBYV
        FhISE2RkZFdXV8lt3c8AAAP3SURBVHhe7d17X9owFMbxEBBFBspFAQcKXt//O1zac4TiQpuQsJ5kz/eP
        fbRLYn8DnS2XKgAAgNh2vUabex57juWGV6mx47GXMdfNVjz2HCteo86cx17GUHea6Csee44rh/V/8djL
        QKGBwlooNFAYCIUGCmuh0EBhoKQLrx2MXQpXYx7tb7xyWH/Y5dG1uOrbbOty0FDgL1OHR56H16jDI5v8
        3s64Tqm7t2ILz89FkfQ5osDr9+zyiDmUHBeBo0z7Cvq9KHT48ZUuvVBqkvFNWNxRr9VrzoEmcaNuMy98
        U53MC+cq70Dzjaj4o2zlX9hBYfpQmL7/s7A4tEoUF1RZCvVHP1UflsS/C7W+Kw6qknRnuRVthV0en54u
        CksolAyFBIWSoZCgUDIUEhRKhkKCQskuUDjdrHeP/LEA0Qtnw/LkyFf5WLIEsQsHdOrH/PnzuR1tiVx4
        WE6/8Ka2RS6sPHqsB7ytZZELHyqFC97WssiFldX0LW9rGQoJCvdQ2AIUEhTuobAFKCQo3MuxcDwdVFQL
        H6p/M+Hh3kYzXqHe9OQRd2Dh5Ks8oj/gCQXe8m3BT5L3Mt7y7GZvJ/4Rwwrvzco8pIEZ2Pc/6p8U83iF
        Bmag/SXxQYWPrl++pPs8zZ3tmSInaW09/xVU+OmzA2aVHs9ztfFc/5PnHQkp9H1Vhn7iia6ePNfXtm/1
        kMKZ3w6YVfyed2R7rk8tfXhV00FI4dS70HpfP8m2b7WiF/rugR7yRFe/Pdd33kvnnzSer8vQa57nau25
        vvW3qKDCqdeN6Hsn9b2TaD3leUeCCs2Pc+d9MCOtO1CLHyNwYUZueNaxsEJ1//N1pjyhwFu+3Z7zq+nk
        mWc3m594l5/AQnNPvamqrKaflryxdO6v3hOe3+TkHSS48Fi1EMeH/wgKCQr3UNgCFBIU7qGwBSgkKNyr
        nDsKel+hiCIXLiqFN7ytZZELD+eIzzj/exmRC1WP19PW815tiF2ozEFwecQtJTB+oeruVqvtkj8RIH6h
        NCgkKJQMhQSFkqGQoFAyFBIUSoZCgkLJUEhQKBkKCQolQyFBoWQoJCiUDIUEhZKhkKBQMhQSFEqGQoJC
        yVBIUCgZCgkKJUMhQaFkKCQolAyFBIWSoZCgUDIUEhRKhkKCQslQSFAoGQoJCiVDIUGhZCgkKJQMhQSF
        kqGQoFAyFBIUSoZCgkLJUEjsV3BJhGPhVbqcCk1iwrihwlKYGRSmD4XpQ2H6lOV/kKxo1ck7UffVQ+aF
        z9X3js+RXheXO+NPclReAO4l68Jnc0g1yfhG1Lq8BNwy28T9ZYPdr2WcFFM1oEClRuvy6DEznVfOI9Nl
        Ly9LMZekAAAA8ZT6A2X/b3BEHklqAAAAAElFTkSuQmCC
</value>
  </data>
</root>